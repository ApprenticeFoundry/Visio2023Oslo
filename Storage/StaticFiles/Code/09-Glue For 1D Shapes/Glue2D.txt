// Playground.cs 
    
    private void CreateGlue2DPlayground()
    {
        var drawing = Workspace.GetDrawing();
        if ( drawing == null) return;

        var s1 = new FoShape2D(200, 200, "Green");
        drawing.AddShape(s1);
        s1.MoveTo(400, 200);

        //...

        var q1 = new FoImage2D(80, 80, "White");
        q1.MoveTo(400, 400);
        drawing.AddShape<FoImage2D>(q1);

// this positions q1 based on s1

        q1.ContextLink = (obj,tick) => {
            obj.PinX = s1.PinX;
            obj.PinY = s1.PinY + s1.Height/2;
        };

        s1.AnimatedMoveTo(800, 300);
    }



// Reminder:   ContextLink is reevaluated every render cycle

    
    public virtual async Task UpdateContext(Canvas2DContext ctx, int tick)
    {
        ContextLink?.Invoke(this, tick);

        //...
    }
      

    public virtual async Task<bool> RenderDetailed(Canvas2DContext ctx, int tick, bool deep = true)
    {
        if (CannotRender()) return false;

        await ctx.SaveAsync();
        await UpdateContext(ctx, tick);

        PreDraw?.Invoke(ctx, this);
        await Draw(ctx, tick);
        if (!IsSelected)
            HoverDraw?.Invoke(ctx, this);

        await DrawTag(ctx);