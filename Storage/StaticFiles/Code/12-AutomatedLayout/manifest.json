{
  "Title": "A - Automated Layout of Trees",
  "Status": "Show",
  "Tip": "Create a class that 'wraps' a shape and orchestrates that arrangement of layout of horizontal and vertical trees ",
  "ImageURL": "{Path}/layoutH.png",
  "Summary": {
    "What": "Lots of drawings are based on trees or shapes, layout is a very common problem",
    "Why": "Your users should spend their time thinking about the relationships between the component shapes ",
    "How": "Use the class FoLayoutTree<V>, to build a tree from your target shapes"
  },
  "Samples": [
    {
      "Tip": "Use a generic class to capture your shape relationships",
      "ImageURL": "{Path}/layoutV.png",
      "Title": "FoLayoutTree<V> - Horizontal Tree",
      "Filename": "LayoutRules.txt",
      "DemoURL": "/visio2023drawing/Composition"
    },
    {
      "Tip": "Compute the size of the each tree branch first",
      "Title": "Compute Size",
      "Filename": "BranchSize.txt",
      "DemoURL": "/visio2023drawing/Composition"
    },
    {
      "Tip": "Next compute the location of each branch",
      "Title": "Compute Location",
      "Filename": "BranchLocation.txt",
      "DemoURL": "/visio2023drawing/Composition"
    },
    {
      "Tip": "Finally connect with 1D shapes",
      "Title": "Compute Connections",
      "Filename": "Connect.txt",
      "DemoURL": "/visio2023drawing/Composition"
    }
  ]
}
