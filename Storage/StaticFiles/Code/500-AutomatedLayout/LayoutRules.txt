
// FoLayoutTree.cs

    public enum BoxLayoutStyle
    {
        None = 0,
        Horizontal = 1,
        Vertical = 2,
        HorizontalStacked = 3,
        VerticalStacked = 4
    }

    public enum LineLayoutStyle
    {
        None = 0,
        Straight = 1,
        VerticalFirst = 2,
        HorizontalFirst = 3,
    }


    private void DoCreateHorizontalTree(TreeModel model)
    {
        DoClear();
        var drawing = Workspace.GetDrawing();
        if (drawing == null) return;

        var page = drawing.CurrentPage();
        var pt = drawing.InchesToPixelsInset(page.PageWidth / 6, 5.0);

        // build the data structure from shapes
        LayoutTree = CreateShapeParentTree<CompShape2D>(model, (shape, tree) =>shape.TagAsComposition(tree));
        
        // Do the layout...
        LayoutTree.HorizontalLayout(pt.X, pt.Y, MarginH);
        LayoutTree.HorizontalLayoutConnections<FoConnector1D>(drawing.Pages());
    }

    private void DoCreateVerticalTree(TreeModel model)
    {
        DoClear();
        var drawing = Workspace.GetDrawing();
        if (drawing == null) return;

        var page = drawing.CurrentPage();
        var pt = drawing.InchesToPixelsInset(page.PageWidth / 6, 5.0);

        // build the data structure from shapes
        LayoutTree = CreateShapeParentTree<CompShape2D>(model, (shape, tree) => shape.TagAsClassification(tree));

        // Do the layout...
        LayoutTree.VerticalLayout(pt.X, pt.Y, MarginV);
        LayoutTree.VerticalLayoutConnections<FoConnector1D>(drawing.Pages());
    }


 