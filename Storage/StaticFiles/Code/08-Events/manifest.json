{
  "Status": "Show",
  "Title": "A - Events and Reactive Programming",
  "Badge": "Programable",
  "ImageURL": "{Path}/encoding.png",
  "Tip": "Process all events as messages with topics, it will simplify your code when you implement collaboration between users.",
  "Summary": {
    "What": "Treat every event as a message with a topic, avoid doing a direct function call to another component.",
    "Why": "Pub/Sub promotes loose coupling. The Message object simplifies recording/playback scenarios and testing.",
    "How": "Use a Topic / Message structure to share event data, then leverage the BlazorComponentBus service"
  },
  "Samples": [
    {
      "Tip": "Encode all events as messages with topics, as soon as possible",
      "Title": "This simplifies working with mouse and keyboard events",
      "Filename": "CanvasEncoders.txt"
    },
    {
      "Tip": "This simplifies working with mouse and keyboard events",
      "Title": "Same data structure for all events, But a different topic",
      "Filename": "CaptureMouse.txt"
    },
    {
      "Tip": "Process the streaming events to complete Foundry service action",
      "Title": "Resizing: Another Tool Example",
      "ImageURL": "{Path}/imageresize.gif",
      "Filename": "Resizing.txt"
    }
  ]
}
