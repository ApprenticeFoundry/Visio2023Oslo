    
// FoGlyph2D.cs


    public async Task DrawTriangle(Canvas2DContext ctx, string color)
    {
        var loc = PinLocation();
        var cx = loc.X;
        var cy = loc.Y;
        var d = 8;

        await ctx.SaveAsync();
        await ctx.BeginPathAsync();

        await ctx.SetFillStyleAsync(color);
        await ctx.MoveToAsync(cx, cy + 2 * d);
        await ctx.LineToAsync(cx + d, cy);
        await ctx.LineToAsync(cx - d, cy);
        await ctx.FillAsync();

        await ctx.SetLineWidthAsync(1);
        await ctx.SetStrokeStyleAsync("#003300");
        await ctx.StrokeAsync();

        await ctx.RestoreAsync();
    }


    // ChatGPT wrote this method
    public async Task DrawStar(Canvas2DContext ctx, string color)
    {
        var loc = PinLocation();

        int StarWidth = 40;
        int StarHeight = 40;
        int StarCenterX = loc.X;
        int StarCenterY = loc.Y;

        var scale = Math.Min((double)StarWidth / 400, (double)StarHeight / 400);
        var starWidth = (int)(400 * scale);
        var starHeight = (int)(400 * scale);
        var top = StarCenterY - starHeight / 2;
        var left = StarCenterX - starWidth / 2;

        await ctx.SaveAsync();
        await ctx.BeginPathAsync();

        await ctx.SetFillStyleAsync(color);
        await ctx.MoveToAsync(left + 200 * scale, top + 100 * scale);
        await ctx.LineToAsync(left + 240 * scale, top + 180 * scale);
        await ctx.LineToAsync(left + 330 * scale, top + 180 * scale);
        await ctx.LineToAsync(left + 260 * scale, top + 230 * scale);
        await ctx.LineToAsync(left + 300 * scale, top + 310 * scale);
        await ctx.LineToAsync(left + 200 * scale, top + 260 * scale);
        await ctx.LineToAsync(left + 100 * scale, top + 310 * scale);
        await ctx.LineToAsync(left + 140 * scale, top + 230 * scale);
        await ctx.LineToAsync(left + 70 * scale, top + 180 * scale);
        await ctx.LineToAsync(left + 160 * scale, top + 180 * scale);
        await ctx.FillAsync();

        await ctx.SetLineWidthAsync(1);
        await ctx.SetStrokeStyleAsync("#003300");
        await ctx.StrokeAsync();

        await ctx.RestoreAsync();
    }


// FoShape1D.cs

    public Action<Canvas2DContext, FoGlyph2D> DrawSimpleLine = async (ctx, obj) =>
    {
        var shape = obj as FoShape1D;
        var start = shape!.Start();
        var finish = shape!.Finish();

        await ctx.BeginPathAsync();
        await ctx.MoveToAsync(start.X, start.Y);
        await ctx.LineToAsync(finish.X, finish.Y);
        await ctx.ClosePathAsync();

        await ctx.SetStrokeStyleAsync(obj.Color);
        await ctx.SetLineWidthAsync(obj.Thickness);
        await ctx.StrokeAsync();
    };


    private static async Task DrawArrowAsync(Canvas2DContext ctx, int width, int height, string color)
    {
        var headWidth = 40;
        var bodyHeight = height / 4;
        var bodyWidth = width - headWidth;

        await ctx.SetFillStyleAsync(color);
        var y = (height - bodyHeight) / 2.0;
        await ctx.FillRectAsync(0, y, bodyWidth, bodyHeight);

        await ctx.BeginPathAsync();
        await ctx.MoveToAsync(bodyWidth, 0);
        await ctx.LineToAsync(width, height / 2);
        await ctx.LineToAsync(bodyWidth,height);
        await ctx.LineToAsync(bodyWidth, 0);
        await ctx.ClosePathAsync();
        await ctx.FillAsync();

        await ctx.SetFillStyleAsync("#fff");
        await ctx.FillTextAsync("â†’", width /2, height / 2, 20);
    }    

// set during construction

var arrow = new FoShape1D("Arrow", "Red")
{
    Height = 50,
    ShapeDraw = async (ctx, obj) => await DrawArrowAsync(ctx, obj.Width, obj.Height, obj.Color)
};    