   

// Advanced technique using clousers and render tick
   
   public void ApplyExternalMethods(FoGlyph2D shape)
    {
        var model = this;
        shape.GlyphId = model.ModelId;

// Sync model object with render tick

        shape.ContextLink = (obj,tick) =>
        {
            model.Tick = tick;
        };
        
        shape.DrawShape = async (ctx,  obj) =>  
        {
            var angle = model.Tick % 360 * Math.PI / 180;
            var pulse = model.Tick % 30 == 0;
            
            if ( pulse )
                await ctx.SetFillStyleAsync("#000000");
            
            var cx = obj.Width / 2;
            var cy = obj.Height / 2;
            var radius = obj.Width / 3;

            await ctx.BeginPathAsync();
            await ctx.ArcAsync(cx, cy, radius, 0*Math.PI,2*Math.PI);
            await ctx.FillAsync();
            await ctx.StrokeAsync();


            var x1 = radius * Math.Cos(angle) + cx;
            var y1 = radius * Math.Sin(angle) + cy;


            await ctx.SetLineWidthAsync(5);
            await ctx.SetStrokeStyleAsync("#000000");
            await ctx.MoveToAsync(cx, cy);
            await ctx.LineToAsync(x1, y1);
            await ctx.StrokeAsync();
        };


    }