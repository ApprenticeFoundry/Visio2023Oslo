{
  "Status":"Show",
  "Title": "A - Pub/Sub and Reactive Programming",
  "ImageURL": "{Path}/pubsub.png",
  "Description": "How to use Pub/Sub and Reactive Programming in Blazor",
  "Tip":"Add a topic to every message object",
  "Summary": {
    "What": "Treat every event as a message with a topic, avoid doing a direct function call to another component.",
    "Why": "Pub/Sub promotes loose coupling. The Message object simplifies recording/playback scenarios and testing.",
    "How": "Use a Topic / Message structure to share event data, then leverage the BlazorComponentBus service"
  },
   "Samples": [
    {
      "Tip": "Use ComponentBus as a service to publish and subscribe to events among components",
      "ImageURL": "{Path}/github.png",
      "Filename": "BusService.txt",
      "DemoURL": "https://github.com/cpear/BlazorComponentBus",
      "Description": "Focus on reporting the events, forward through ComponentBus"
    },

    {
      "Tip": "Subscribe to messages from any component",
            "ImageURL": "{Path}/encoding.png",
      "Title": "The AttachAssetFileEvent travels across application boundaries",
      "Filename": "AttachFile.txt"
    }
  ]
}
